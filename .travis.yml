sudo: required
services:
  - docker

before_install:
  - docker build -t ae1663830a/frontend-test -f ./frontend/Dockerfile-dev ./frontend

script:
  - docker run ae1663830a/frontend-test npm run test -- --coverage

after_success:
  - docker build -t ae1663830a/multi-frontend ./frontend
  - docker build -t ae1663830a/multi-nginx ./nginx
  - docker build -t ae1663830a/multi-postgres ./postgres
  - docker build -t ae1663830a/multi-backend ./backend
  - docker build -t ae1663830a/multi-worker ./worker
  # Log in to the docker hub
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # Push images to docker hub
  - docker push ae1663830a/multi-frontend
  - docker push ae1663830a/multi-nginx
  - docker push ae1663830a/multi-postgres
  - docker push ae1663830a/multi-backend
  - docker push ae1663830a/multi-worker

deploy:
  # data from aws (look for "Elastic Beanstalk", "S3", "IAM")
  provider: elasticbeanstalk
  region: "us-east-2"
  app: "multi-docker-ci-cd"
  env: "MultiDockerCiCd-env"
  # AWS services -> S3; choose existing or create new
  bucket_name: "elasticbeanstalk-us-east-2-457461267368"
  # Any path name you wish
  bucket_path: "multi-docker-ci-cd"
  on:
    # deploy only if changes have been made on master branch
    branch: master

  # 1. Create user with full permissions to elasticbeanstalk on AWS
  # 2. Copy Access key ID and Secret access key from AWS to
  # Travis-CI -> react-docker -> More options -> Environment Variables
  # 3. Provide added variables here
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key:
    secure: "$AWS_SECRET_KEY"
